Most of the algorithms are adapted from source code we found online.

math/egcd.cpp: wikipedia
math/Fp.cpp: it uses Fermat's little theorem
math/fft.cpp: https://github.com/antonkov/ITMOTeamBook/blob/master/fft/full.cpp
math/gauss.cpp: old notebook
math/gauss_z2z.cpp: old notebook
math/walsh_hadamard.cpp: some programming bootcamp
math/subset_sum.cpp: some programming bootcamp
math/opmod.cpp: my implementation
math/pollard_rho.cpp: wikipedia
math/miller_rabin.cpp: wikipedia
math/factorize_range.cpp: own implementation
math/gen_primes.cpp: https://github.com/stjepang/snippets/blob/master/prime.cpp
math/invmod.cpp: a lecture from enot110
math/invmod_range.cpp: a lecture from enot110
math/linear_reccurence.cpp: own implementation
math/polynom_euclid.cpp: own implementation
string/kmp.cpp: http://www.iti.fh-flensburg.de/lang/algorithmen/pattern/kmpen.htm
string/zfunc.cpp: https://github.com/stjepang/snippets/blob/master/z_algorithm.cpp
string/ahocorasick.cpp: original paper (http://cr.yp.to/bib/1975/aho.pdf)
string/suffixautomaton.cpp: http://e-maxx.ru/algo/suffix_automata using https://translate.yandex.com/
string/suffixarray.cpp: http://web.stanford.edu/class/cs97si/suffix-array.pdf https://github.com/antonkov/ITMOTeamBook/blob/master/string/suffix_array.cpp
string/suffixarray.cpp: implementation by Akulen
string/manacher.cpp: https://github.com/stjepang/snippets/blob/master/manacher.cpp
datastruct/unionfind.cpp: wikipedia, complexity from http://stackoverflow.com/a/2326676
datastruct/fenwick.cpp: wikipedia
datastruct/fenwick_range.cpp: http://petr-mitrichev.blogspot.com/2013/05/fenwick-tree-range-updates.html
datastruct/segtree.cpp: http://codeforces.com/blog/entry/18051
datastruct/lazysegtree.cpp: old notebook
datastruct/rmq.cpp: https://www.topcoder.com/community/data-science/data-science-tutorials/range-minimum-query-and-lowest-common-ancestor/#Sparse_Table_(ST)_algorithm
datastruct/wavelet_tree.cpp: http://www.ioinformatics.org/oi/pdf/v10_2016_19_37.pdf
datastruct/logvector.cpp: http://e-maxx.ru/algo/treap
flow/dinic.cpp: old notebook
flow/cap_scaling.cpp: old notebook
graph/scc_tarjan.cpp: wikipedia
graph/scc_kosaraju.cpp: wikipedia
graph/articulation.cpp: wikipedia, replacing depth with ind
graph/bridges.cpp: adapted from articulation.cpp
graph/dominator_tree.cpp: https://github.com/zimpha/algorithmic-library/blob/master/graph-utility/DominatorTree.cc
tree/lca.cpp: https://www.topcoder.com/community/data-science/data-science-tutorials/range-minimum-query-and-lowest-common-ancestor/#Reduction%20from%20LCA%20to%20RMQ
tree/lca_dyn.cpp: https://www.topcoder.com/community/data-science/data-science-tutorials/range-minimum-query-and-lowest-common-ancestor/#Another%20easy%20solution%20in%20O(N%20logN,%20O(logN)
tree/heavy_light.cpp : https://blog.anudeep2011.com/heavy-light-decomposition/ https://github.com/stjepang/snippets/blob/master/heavy_light.cpp
misc/lca_short.cpp: a submission of md5 on codeforces
misc/lca_full.cpp: wikipedia
